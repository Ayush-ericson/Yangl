Usage: pyang [options] [<filename>...]

Validates the YANG module in <filename> (or stdin), and all its dependencies.

Options:
  -h, --help            Show this help message and exit
  -v, --version         Show version number and exit
  -V, --verbose         
  -e, --list-errors     Print a listing of all error and warning codes and
                        exit.
  --print-error-code    On errors, print the error code instead of the error
                        message.
  --print-error-basename
                        On errors, print the basename of files of the error
                        message.
  --msg-template=MSG_TEMPLATE
                        Template used to display error messages. This is a
                        python new-style format string used to format the
                        message information with keys file, line, code, type
                        and msg. Example: --msg-template='{file} || {line} ||
                        {code} || {type} || {level} || {msg}'
  -W WARNING            If WARNING is 'error', treat all warnings as errors,
                        except any listed WARNING. If WARNING is 'none', do
                        not report any warnings.
  -E WARNING            Treat each WARNING as an error.  For a list of
                        warnings, use --list-errors.
  --ignore-error=ERROR  Ignore ERROR.  Use with care.  For a list of errors,
                        use --list-errors.
  --ignore-errors       Ignore all errors.  Use with care.
  --canonical           Validate the module(s) according to the canonical YANG
                        order.
  --max-line-length=MAX_LINE_LEN
  --max-identifier-length=MAX_IDENTIFIER_LEN
  -t TRANSFORMS, --transform=TRANSFORMS
                        Apply transform TRANSFORM.  Supported transforms are:
                        edit
  -f FORMAT, --format=FORMAT
                        Convert to FORMAT.  Supported formats are: dsdl,
                        depend, name, omni, yin, tree, jtox, capability, yang,
                        sample-xml-skeleton, flatten, uml, jstree, jsonxsl,
                        identifiers
  -o OUTFILE, --output=OUTFILE
                        Write the output to OUTFILE instead of stdout.
  -F FEATURES, --features=FEATURES
                        Features to support, default all.
                        <modname>:[<feature>,]*
  --max-status=MAXSTATUS
                        Max status to support, one of: current, deprecated,
                        obsolete
  --deviation-module=DEVIATION
                        Deviation module
  -p PATH, --path=PATH  :-separated search path for yin and yang modules
  --plugindir=PLUGINDIR
                        Load pyang plugins from PLUGINDIR
  --strict              Force strict YANG compliance.
  --lax-quote-checks    Lax check of backslash in quoted strings.
  --lax-xpath-checks    Lax check of XPath expressions.
  --trim-yin            In YIN input modules, trim whitespace in textual
                        arguments.
  -L, --hello           Filename of a server's hello message is given instead
                        of module filename(s).
  --implicit-hello-deviations
                        Attempt to parse all deviations from hello message
                        regardless of declaration.
  --keep-comments       Pyang will not discard comments;
                        has effect if the output plugin can
                        handle comments.
  --no-path-recurse     Do not recurse into directories in the
                        yang path.
  --ietf                Validate the module(s) according to IETF rules.
  --ietf-help           Print help on the IETF checks and exit
  --bbf                 Validate the module(s) according to BBF rules.
  --ieee                Validate the module(s) according to IEEE rules.
  --check-update-from=OLDMODULE
                        Verify that upgrade from OLDMODULE follows RFC 6020
                        and 7950 rules.
  -P OLD_PATH, --check-update-from-path=OLD_PATH
                        :-separated search path for yin and yang modules used
                        by OLDMODULE
  -D OLD_DEVIATION, --check-update-from-deviation-module=OLD_DEVIATION
                        Old deviation module of the OLDMODULE. This option can
                        be given multiple times.
  --lint                Validate the module(s) according to RFC 8407rules.
  --lint-namespace-prefix=LINT_NAMESPACE_PREFIXES
                        Validate that the module's namespace matches one of
                        the given prefixes.
  --lint-modulename-prefix=LINT_MODULENAME_PREFIXES
                        Validate that the module's name matches one of the
                        given prefixes.
  --lint-ensure-hyphenated-names
                        No upper case and underscore in names.
  --mef                 Validate the module(s) according to MEF rules.
  --3gpp                Validate the module(s) according to 3GPP rules.

  YANG output specific options:
    --yang-canonical    Print in canonical order
    --yang-remove-unused-imports
    --yang-remove-comments
    --yang-line-length=YANG_LINE_LENGTH
                        Maximum line length

  YIN output specific options:
    --yin-canonical     Print in canonical order
    --yin-pretty-strings
                        Pretty print strings

  Hybrid DSDL schema output specific options:
    --dsdl-no-documentation
                        No output of DTD compatibility documentation
                        annotations
    --dsdl-no-dublin-core
                        No output of Dublin Core metadata annotations
    --dsdl-record-defs  Record all top-level defs (even if not used)
    --dsdl-lax-yang-version
                        Try to translate modules with unsupported YANG
                        versions (use at own risk)

  JSTree output specific options:
    --jstree-no-path    Do not include paths to make
                        page less wide
    --jstree-path=JSTREE_PATH
                        Subtree to print

  Flatten output specific options:
    --flatten-no-header
                        Do not emit the CSV header.
    --flatten-keyword   Output the keyword.
    --flatten-type      Output the top-level type.
    --flatten-primitive-type
                        Output the primitive type.
    --flatten-flag      Output flag property.
    --flatten-description
                        Output the description.
    --flatten-keys      Output the key names if specified.
    --flatten-keys-in-xpath
                        Output the XPath with keys in path.
    --flatten-prefix-in-xpath
                        Output the XPath with prefixes instead of modules.
    --flatten-qualified-in-xpath
                        Output the XPath with qualified in path
                        /module1:root/module1:node/module2:node/...
    --flatten-qualified-module-and-prefix-path
                        Output an XPath with both module and prefix i.e.
                        /module1:prefix1:root/...
    --flatten-deviated  Output deviated nodes.
    --flatten-data-keywords
                        Flatten all data keywords instead of onlydata
                        definition keywords.
    --flatten-filter-keyword=FLATTEN_FILTER_KEYWORD
                        Filter output to only desired keywords.
    --flatten-filter-primitive=FLATTEN_FILTER_PRIMITIVE
                        Filter output to only desired primitive types.
    --flatten-filter-flag=FLATTEN_FILTER_FLAG
                        Filter output to flags.
    --flatten-csv-dialect=FLATTEN_CSV_DIALECT
                        CSV dialect for output.
    --flatten-ignore-no-primitive
                        Ignore error if primitive is missing.
    --flatten-status    Output the status statement value.
    --flatten-resolve-leafref
                        Output the XPath of the leafref target.

  Capability output specific options:
    --capability-entity
                        Write ampersands as XML entity

  UML specific options:
    --uml-classes-only  Generate UML with classes only, no attributes
    --uml-split-pages=UML_PAGES_LAYOUT
                        Generate UML output split into pages (separate .png
                        files), NxN, example 2x2
    --uml-output-directory=UML_OUTPUTDIR
                        Put generated <modulename>.png or <title>.png file(s)
                        in OUTPUTDIR (default img/)
    --uml-title=UML_TITLE
                        Set the title of the generated UML, including the
                        output file name
    --uml-header=UML_HEADER
                        Set the page header of the generated UML
    --uml-footer=UML_FOOTER
                        Set the page footer of the generated UML
    --uml-long-identifiers
                        Use the full schema identifiers for UML class names.
    --uml-inline-groupings
                        Inline groupings where they are used.
    --uml-inline-augments
                        Inline augmentations where they are used.
    --uml-description   Include description of structural nodes in diagram.
    --uml-no=UML_NO     Suppress parts of the diagram.  Valid suppress values
                        are: module, uses, leafref, identity, identityref,
                        typedef, import, annotation, circles, stereotypes.
                        Annotations suppresses YANG constructs represented as
                        annotations such as config statements for containers
                        and module info. Module suppresses module box around
                        the diagram and module information.  Example --uml-
                        no=circles,stereotypes,typedef,import
    --uml-truncate=UML_TRUNCATE
                        Leafref attributes and augment elements can have long
                        paths making the classes too wide.  This option will
                        only show the tail of the path.  Example --uml-
                        truncate=augment,leafref
    --uml-max-enums=UML_MAX_ENUMS
                        The maximum number of enumerated values being rendered
    --uml-filter        Generate filter file, comment out lines with '-' and
                        use with option '--filter-file' to filter the UML
                        diagram
    --uml-filter-file=UML_FILTER_FILE
                        NOT IMPLEMENTED: Only paths in the filter file will be
                        included in the diagram

  Name output specific options:
    --name-print-revision
                        Print the name and revision in name@revision format

  OmniGraffle output specific options:
    --omni-path=OMNI_TREE_PATH
                        Subtree to print

  Depend output specific options:
    --depend-target=DEPEND_TARGET
                        Makefile rule target
    --depend-no-submodules
                        Do not generate dependencies for included submodules
    --depend-from-submodules
                        Generate dependencies from included submodules
    --depend-recurse    Generate dependencies to all imports, recursively
    --depend-extension=DEPEND_EXTENSION
                        YANG module file name extension
    --depend-include-path
                        Include file path in the prerequisites
    --depend-ignore-module=DEPEND_IGNORE
                        (sub)module to ignore in the prerequisites.  This
                        option can be given multiple times.

  Sample-xml-skeleton output specific options:
    --sample-xml-skeleton-doctype=DOCTYPE
                        Type of sample XML document (data or config).
    --sample-xml-skeleton-defaults
                        Insert leafs with defaults values.
    --sample-xml-skeleton-annotations
                        Add annotations as XML comments.
    --sample-xml-skeleton-path=SAMPLE_PATH
                        Subtree to print

  Tree output specific options:
    --tree-help         Print help on tree symbols and exit
    --tree-depth=TREE_DEPTH
                        Number of levels to print
    --tree-line-length=TREE_LINE_LENGTH
                        Maximum line length
    --tree-path=TREE_PATH
                        Subtree to print
    --tree-print-groupings
                        Print groupings
    --tree-no-expand-uses
                        Do not expand uses of groupings
    --tree-module-name-prefix
                        Prefix with module names instead of prefixes
    --tree-print-yang-data
                        Print ietf-restconf:yang-data structures
    --tree-print-structures
                        Print ietf-yang-structure-ext:structure

  SID file specific options:
    --sid-help          Print help on automatic SID generation
    --sid-generate-file=GENERATE_SID_FILE
                        Generate a .sid file.
    --sid-update-file=UPDATE_SID_FILE
                        Generate a .sid file based on a previous .sid file.
    --sid-check-file=CHECK_SID_FILE
                        Check the consistency between a .sid file and the
                        .yang file(s).
    --sid-list          Print the list of SID.
    --sid-registration-info
                        Print the information required by the SID registry.
    --sid-extra-range=EXTRA_SID_RANGE
                        Add an extra SID range during a .sid file update.

  Edit transform specific options:
    --edit-yang-version=VERSION
                        Set YANG version to the supplied value
    --edit-namespace=NAMESPACE
                        Set YANG namespace to the supplied value
    --edit-update-import-dates
                        Set import/include revision-date statements to match
                        imported/included modules/submodules
    --edit-delete-import-dates
                        Delete import/include revision-date statements
    --edit-organization=ORGANIZATION
                        Set module/submodule organization to the supplied
                        value
    --edit-contact=CONTACT
                        Set module/submodule contact to the supplied value
    --edit-description=DESCRIPTION
                        Set module/submodule description to the supplied value
    --edit-delete-revisions-after=PREVDATE
                        Delete any revisions after the supplied yyyy-mm-dd
    --edit-revision-date=DATE
                        Set most recent revision date to the supplied yyyy-mm-
                        dd
    --edit-revision-description=DESCRIPTION
                        Set most recent revision description to the supplied
                        value
    --edit-revision-reference=REFERENCE
                        Set most recent revision reference to the supplied
                        value
